{"version":3,"sources":["nexmoClient.js","utils.js","containers/EventList.js","styles/styles.js","containers/Login.js","App.js","serviceWorker.js","index.js"],"names":["nexmoClient","NexmoClient","debug","Container","styled","div","useStyles","makeStyles","theme","root","gridColumn","backgroundColor","palette","background","paper","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","text","secondary","paddingLeft","paddingRight","footer","position","left","bottom","width","clearButton","header","right","top","answerButton","rejectButton","hangupButton","span","EventList","nexmoApp","events","setEvents","incomingCall","classes","me","Typography","variant","gutterBottom","application","name","to","status","className","Button","onClick","answer","reject","hangUp","map","event","Accordion","key","id","cid","AccordionSummary","expandIcon","aria-controls","type","_embedded","from_member","Divider","orientation","flexItem","from_user","display_name","AccordionDetails","JSON","stringify","alignItemsAndJustifyContent","display","alignItems","justifyContent","height","linearProgress","sentMessageComponent","box","link","conversations","overflow","messagesEndDiv","float","username","padding","input","marginLeft","spacing","flex","iconButton","topnav","navItem","Login","setNexmoApp","setIncomingCall","useState","progress","setProgress","userToken","setUserToken","setupApplicationListeners","app","on","member","call","conversation","from","userId","undefined","releaseGroup","setupConversationListeners","Box","Paper","component","InputBase","placeholder","inputProps","onChange","target","value","IconButton","aria-label","login","then","window","LinearProgress","App","lastSocketEvent","setEvent","useEffect","session","connection","io","packet","a","data","useSocketEvents","clientEvent","eventsHistory","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.844443a9.chunk.js","sourcesContent":["import NexmoClient from \"nexmo-client\";\n\nconst nexmoClient = new NexmoClient({ debug: false });\n\nexport default nexmoClient","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: calc(100% - 56px);\n  overflow-y: overlay;\n`;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  Button\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Link } from \"react-router-dom\";\n\nimport { Container } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    gridColumn: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"10%\",\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n  },\n  footer: {\n    position: \"fixed\",\n    left: 0,\n    bottom: 0,\n    width: \"100%\",\n    \"text-align\": \"left\",\n    \"border-style\": \"solid\",\n    \"border-color\": \"grey\",\n    \"border-width\": \"medium\",\n  },\n  clearButton: {\n    width: \"100%\",\n  },\n  header: {\n    position: \"fixed\",\n    right: 5,\n    top: 5,\n    width: \"30%\",\n    \"text-align\": \"center\",\n    \"border-width\": \"medium\",\n  },\n  answerButton: {\n    width: \"48%\",\n    \"background-color\": \"green\",\n  },\n  rejectButton: {\n    width: \"48%\",\n    \"background-color\": \"red\",\n  },\n  hangupButton: {\n    width: \"100%\",\n    \"background-color\": \"red\",\n  },\n  span: {\n    \"margin-left\": \"2%\",\n  },\n}));\n\nconst EventList = ({ nexmoApp, events, setEvents, incomingCall }) => {\n  const classes = useStyles();\n\n  if (!nexmoApp.me) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        {nexmoApp.me ? (\n          `Hello ${nexmoApp.me.application.me.name}`\n        ) : (\n          <Link to=\"/\">Login</Link>\n        )}\n      </Typography>\n\n      {incomingCall && incomingCall.status !== \"answered\" ? (\n        <div className={classes.header}>\n          <Button\n            onClick={() => incomingCall.answer()}\n            className={classes.answerButton}\n          >\n            Answer Call\n          </Button>\n          <span className={classes.span}></span>\n          <Button\n            onClick={() => incomingCall.reject()}\n            className={classes.rejectButton}\n          >\n            Reject Call\n          </Button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n\n      {incomingCall && incomingCall.status === \"answered\" ? (\n        <div className={classes.header}>\n          <Button\n            onClick={() => incomingCall.hangUp()}\n            className={classes.hangupButton}\n          >\n            Hangup Call\n          </Button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n\n      {events.map((event) => {\n        return (\n          <Accordion key={event.id + event.cid}>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>{event.type}</Typography>\n              <Typography className={classes.secondaryHeading}>\n                From:{\" \"}\n                {event?._embedded?.from_member?.id}\n              </Typography>\n              <Divider orientation=\"vertical\" flexItem />\n              <Typography className={classes.secondaryHeading}>\n                Display name:{\" \"}\n                {event?._embedded?.from_user?.display_name ??\n                  event?._embedded?.from_user?.name}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>{`Body: ${JSON.stringify(event)}`} </Typography>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n      <div className={classes.footer}>\n        <Button onClick={() => setEvents([])} className={classes.clearButton}>\n          Clear Events\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default EventList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  alignItemsAndJustifyContent: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"margin-top\": \"-78px\",\n    height: \"100vh\",\n  },\n  linearProgress: {\n    height: \"5px\",\n    width: \"200px\",\n    top: \"50%\",\n    left: \"50%\",\n    position: \"absolute\",\n    \"margin-left\": \"-100px\",\n  },\n  root: {\n    gridColumn: 2,\n    backgroundColor: theme.palette.background.paper,\n  },\n  sentMessageComponent: {\n    \"align-self\": \"flex-end\",\n    display: \"flex\",\n  },\n  box: {\n    display: \"flex\",\n    height: \"100vh\",\n    \"flex-direction\": \"column\",\n    \"background-color\": \"#f6f0d791\",\n  },\n  link: {\n    \"margin-top\": \"15px\",\n    display: \"block\",\n  },\n\n  conversations: {\n    overflow: \"hidden\",\n  },\n\n  messagesEndDiv: {\n    display: \"inline-block\",\n    float: \"left\",\n  },\n  username: {\n    padding: \"5px 7px\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  topnav: {\n    \"background-color\": \"#333\",\n    overflow: \"hidden\"\n  },\n  navItem: {\n    float: \"left\",\n    color: \"#f2f2f2\",\n    \"text-align\": \"center\",\n    padding: \"14px 16px\",\n    \"text-decoration\": \"none\",\n    \"font-size\": \"17px\"\n  },\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Box,\n  IconButton,\n  Paper,\n  InputBase,\n  Container,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport useStyles from \"../styles/styles\";\n\nfunction Login({ nexmoApp, setNexmoApp, setIncomingCall }) {\n  const classes = useStyles();\n  const [progress, setProgress] = useState(false);\n  const [userToken, setUserToken] = useState(\"\");\n\n  const handleChange = (event) => {\n    setUserToken(event.target.value);\n  };\n\n  const setupConversationListeners = (app, call) => {\n    const conversation = call.conversation;\n    conversation.on(\"member:left\", conversation.id, (from, event) => {\n      if (from.userId === app.me.id) {\n        setIncomingCall(undefined);\n        conversation.releaseGroup(conversation.id);\n      }\n    });\n  };\n\n  const setupApplicationListeners = (app) => {\n    app.on(\"member:call\", (member, call) => {\n      setIncomingCall(call);\n      setupConversationListeners(app, call);\n    });\n  }\n\n  function onClick() {\n    setProgress(true);\n    nexmoApp.login(userToken).then((app) => {\n      setProgress(false);\n      window.nexmoApp = app;\n      setNexmoApp(app);\n      setupApplicationListeners(app);\n    });\n  }\n\n  if (nexmoApp.me) {\n    return <Redirect to=\"/events\" />;\n  }\n\n  return (\n    <Container>\n      {!progress ? (\n        <Box className={classes.alignItemsAndJustifyContent}>\n          <h1>Please, Login</h1>\n          <Paper component=\"form\" className={classes.root}>\n            <InputBase\n              className={classes.input}\n              placeholder=\"Login Token\"\n              inputProps={{ \"aria-label\": \"login token\" }}\n              onChange={handleChange}\n            />\n            <IconButton\n              color=\"primary\"\n              type=\"submit\"\n              className={classes.iconButton}\n              aria-label=\"directions\"\n              onClick={onClick}\n            >\n              <ArrowForwardIcon />\n            </IconButton>\n          </Paper>\n        </Box>\n      ) : null}\n      {progress ? (\n        <Box className={classes.alignItemsAndJustifyContent}>\n          <LinearProgress className={classes.linearProgress} />\n        </Box>\n      ) : null}\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport nexmoClient from \"./nexmoClient\";\n\nimport EventList from \"./containers/EventList\";\nimport Login from \"./containers/Login\";\n\nimport \"./App.css\";\n\nconst Container = styled.div`\n  height: 100vh;\n`;\n\nfunction useSocketEvents(nexmoApp) {\n  const [event, setEvent] = useState(null);\n\n  const setLastEvent = (clientEvent) => {\n    setEvent(clientEvent);\n  };\n\n  useEffect(() => {\n    if (nexmoApp?.session?.connection?.io) {\n      nexmoApp.session.connection.io.on(\"packet\", async (packet) => {\n        if (packet.type !== 2) return;\n        if (packet.data[0] === \"echo\") return;\n        const event = packet.data[1];\n        event.type = packet.data[0];\n\n        setLastEvent(event);\n      });\n    }\n  });\n\n  return event;\n}\n\nfunction App() {\n  const [nexmoApp, setNexmoApp] = useState(nexmoClient);\n  const [events, setEvents] = useState([]);\n  const [incomingCall, setIncomingCall] = useState(undefined);\n  const lastSocketEvent = useSocketEvents(nexmoApp);\n\n  useEffect(() => {\n    const appendHistory = (clientEvent) => {\n      if (clientEvent)\n        setEvents((eventsHistory) => [...eventsHistory, clientEvent]);\n    };\n\n    appendHistory(lastSocketEvent);\n  }, [lastSocketEvent]);\n\n  return (\n    <Router>\n      <Container>\n        <Switch>\n          <Route path=\"/login\">\n            <Login\n              nexmoApp={nexmoApp}\n              setNexmoApp={setNexmoApp}\n              setIncomingCall={setIncomingCall}\n            />\n          </Route>\n          <Route path=\"/events\">\n            <EventList\n              nexmoApp={nexmoApp}\n              events={events}\n              setEvents={setEvents}\n              incomingCall={incomingCall}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Login\n              nexmoApp={nexmoApp}\n              setNexmoApp={setNexmoApp}\n              setIncomingCall={setIncomingCall}\n            />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}